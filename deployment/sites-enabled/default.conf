# Define connection details for connecting to django running in
# a docker container.
upstream django {
    server django:8080;
}
upstream qgis-fcgi {
    server qgis-server:9993;
}

# Get 'host' from `$host` unless 'X-Forwarded-Host'
# is set by the reverse proxy.
# 'X-Forwarded-Host' may contain also the port,
# so it is removed from the variable
map $http_x_forwarded_host $qgis_host {
    "~(?<h>[^:]+)" $h;
    default $host;
}
# Get 'PORT' from `$http_host`
map $http_host $port {
    "~*.*:(?<p>.*)" $p;
    default $server_port;
}
# Get 'HTTPS' status from `$https` unless 'X-Forwarded-Proto'
# is set by the reverse proxy and contains 'https' scheme
map $http_x_forwarded_proto $qgis_ssl {
    "https" "on";
    default $https;
}
# Get 'PORT' from `$port` unless 'X-Forwarded-Port'
# is set by the reverse proxy
map $http_x_forwarded_port $qgis_port {
    "" $port;
    default $http_x_forwarded_port;
}

server {
    listen 80;
    server_name mycivitas.ca;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}


server {
    # OTF gzip compression
    gzip on;
    gzip_min_length 860;
    gzip_comp_level 5;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/xml application/x-javascript text/xml text/css application/json;
    gzip_disable “MSIE [1-6].(?!.*SV1)”;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # the port your site will be served on
    listen      8080 ssl;
    server_name mycivitas.ca;
    ssl_certificate /etc/letsencrypt/live/mycivitas.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mycivitas.ca/privkey.pem;

    # the domain name it will serve for
    server_name mycivitas.ca;
    charset     utf-8;

    # max upload size, adjust to taste
    client_max_body_size 15M;
    # Django media
    location /media  {
        # your Django project's media files - amend as required
        alias /home/web/media;
        expires 21d; # cache for 71 days
    }
    location /static {
        # your Django project's static files - amend as required
        alias /home/web/static;
        expires 21d; # cache for 21 days
    }
    location /archive {
        proxy_set_header   Host $http_host;
        autoindex on;
        # your Django project's static files - amend as required
        alias /home/web/archive;
        expires 21d; # cache for 6h
    }

    location /ogc/ {
        rewrite ^/ogc/(.*)$ /qgis/qgis_mapserv.fcgi?map=/io/data/$1/$1.qgs;
    }
    # This section is only used when redirecting from /ogc file based
    # project requests
    location /qgis/ {
        internal; # Used only by the OGC rewrite
        root /var/www/data;
        fastcgi_pass  qgis-fcgi;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param QUERY_STRING    $query_string;
        # build links in GetCapabilities based on
        # the hostname exposed by the reverse proxy
        fastcgi_param  HTTPS $qgis_ssl;
        fastcgi_param  SERVER_NAME $qgis_host;
        fastcgi_param  SERVER_PORT $qgis_port;

        include fastcgi_params;
    }

    # For PG projects as we want all requests to come via
    # the /map call which will then append the pg project connection details
    location /map/ {
        # A little rewrite in the style of https://github.com/qgis/QGIS/issues/31192
        rewrite ^/map/$ /qgis-pg/qgis_mapserv.fcgi;
    }
    location /qgis-pg/ {
        internal; # Used only by the OGC rewrite
        root /var/www/data;
        fastcgi_pass  qgis-fcgi;

        fastcgi_param SCRIPT_FILENAME /ogc/$fastcgi_script_name;
        fastcgi_param QUERY_STRING    $query_string;
        # build links in GetCapabilities based on
        # the hostname exposed by the reverse proxy
        fastcgi_param  HTTPS $qgis_ssl;
        fastcgi_param  SERVER_NAME $qgis_host;
        fastcgi_param  SERVER_PORT $qgis_port;
        # We redirect to a database connection with shamelessly hardcoded
        # credentials which should never be seen on the url
        # For pg project path syntax, see https://docs.qgis.org/3.16/en/docs/server_manual/config.html#environment-variables
        # If the map= part is provided via the /ogc/ or /ows/ request, this part is ignored
        fastcgi_param  QGIS_PROJECT_FILE postgresql://?service=civitas&sslmode=require&schema=public&project=civitasgis_reader;

        include fastcgi_params;
    }

    # Except for let's encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        # the uwsgi_params file you installed needs to be passed with each
        # request.
        # the uwsgi_params need to be passed with each uwsgi request
        uwsgi_param  QUERY_STRING       $query_string;
        uwsgi_param  REQUEST_METHOD     $request_method;
        uwsgi_param  CONTENT_TYPE       $content_type;
        uwsgi_param  CONTENT_LENGTH     $content_length;

        uwsgi_param  REQUEST_URI        $request_uri;
        uwsgi_param  PATH_INFO          $document_uri;
        uwsgi_param  DOCUMENT_ROOT      $document_root;
        uwsgi_param  SERVER_PROTOCOL    $server_protocol;
        uwsgi_param  HTTPS              $https if_not_empty;

        uwsgi_param  REMOTE_ADDR        $remote_addr;
        uwsgi_param  REMOTE_PORT        $remote_port;
        uwsgi_param  SERVER_PORT        $server_port;
        uwsgi_param  SERVER_NAME        $server_name;
    }
}
