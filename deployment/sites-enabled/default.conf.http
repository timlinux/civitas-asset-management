# OTF gzip compression
gzip on;
gzip_min_length 860;
gzip_comp_level 5;
gzip_proxied expired no-cache no-store private auth;
gzip_types text/plain application/xml application/x-javascript text/xml text/css application/json;
gzip_disable “MSIE [1-6].(?!.*SV1)”;

access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log;

# max upload size, adjust to taste
client_max_body_size 15M;
# Django media
location /media  {
    # your Django project's media files - amend as required
    alias /home/web/media;
    expires 21d; # cache for 71 days
}
location /static {
    # your Django project's static files - amend as required
    alias /home/web/static;
    expires 21d; # cache for 21 days
}
location /archive {
    proxy_set_header   Host $http_host;
    autoindex on;
    # your Django project's static files - amend as required
    alias /home/web/archive;
    expires 21d; # cache for 6h
}

location /ogc/ {
    rewrite ^/ogc/(.*)$ /qgis/qgis_mapserv.fcgi?map=/io/data/$1/$1.qgs;
}
# This section is only used when redirecting from /ogc file based
# project requests
location /qgis/ {
    internal; # Used only by the OGC rewrite
    root /var/www/data;
    fastcgi_pass  qgis-fcgi;

    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param QUERY_STRING    $query_string;
    # build links in GetCapabilities based on
    # the hostname exposed by the reverse proxy
    fastcgi_param  HTTPS $qgis_ssl;
    fastcgi_param  SERVER_NAME $qgis_host;
    fastcgi_param  SERVER_PORT $qgis_port;

    include fastcgi_params;
}

# For PG projects as we want all requests to come via
# the /map call which will then append the pg project connection details
location /map/ {
    # A little rewrite in the style of https://github.com/qgis/QGIS/issues/31192
    rewrite ^/map/$ /qgis-pg/qgis_mapserv.fcgi;
}
location /qgis-pg/ {
    internal; # Used only by the OGC rewrite
    root /var/www/data;
    fastcgi_pass  qgis-fcgi;

    fastcgi_param SCRIPT_FILENAME /ogc/$fastcgi_script_name;
    fastcgi_param QUERY_STRING    $query_string;
    # build links in GetCapabilities based on
    # the hostname exposed by the reverse proxy
    fastcgi_param  HTTPS $qgis_ssl;
    fastcgi_param  SERVER_NAME $qgis_host;
    fastcgi_param  SERVER_PORT $qgis_port;
    # We redirect to a database connection with shamelessly hardcoded
    # credentials which should never be seen on the url
    # For pg project path syntax, see https://docs.qgis.org/3.16/en/docs/server_manual/config.html#environment-variables
    # If the map= part is provided via the /ogc/ or /ows/ request, this part is ignored
    fastcgi_param  QGIS_PROJECT_FILE postgresql://?service=civitas&sslmode=require&schema=public&project=civitasgis_reader;

    include fastcgi_params;
}

# Mapproxy
location /mapproxy {
   proxy_pass http://mapproxy/mapproxy;
   proxy_set_header    Host            $host;
   proxy_set_header    X-Real-IP       $remote_addr;
   proxy_set_header    X-Forwarded-for $remote_addr;
   port_in_redirect off;
   proxy_connect_timeout 600;
   proxy_set_header X-Script-Name /mapproxy;
}

# Finally, send all non-media requests to the Django server.
location / {
    uwsgi_pass  django;
    # the uwsgi_params file you installed needs to be passed with each
    # request.
    # the uwsgi_params need to be passed with each uwsgi request
    uwsgi_param  QUERY_STRING       $query_string;
    uwsgi_param  REQUEST_METHOD     $request_method;
    uwsgi_param  CONTENT_TYPE       $content_type;
    uwsgi_param  CONTENT_LENGTH     $content_length;

    uwsgi_param  REQUEST_URI        $request_uri;
    uwsgi_param  PATH_INFO          $document_uri;
    uwsgi_param  DOCUMENT_ROOT      $document_root;
    uwsgi_param  SERVER_PROTOCOL    $server_protocol;
    uwsgi_param  HTTPS              $https if_not_empty;

    uwsgi_param  REMOTE_ADDR        $remote_addr;
    uwsgi_param  REMOTE_PORT        $remote_port;
    uwsgi_param  SERVER_PORT        $server_port;
    uwsgi_param  SERVER_NAME        $server_name;
}
