# Define connection details for connecting to django running in
# a docker container.
upstream django {
    server django:8080;
}
upstream qgis-fcgi {
    server qgis-server:9993;
}
upstream mapproxy {
    server mapproxy:8080;
}

# Get 'host' from `$host` unless 'X-Forwarded-Host'
# is set by the reverse proxy.
# 'X-Forwarded-Host' may contain also the port,
# so it is removed from the variable
map $http_x_forwarded_host $qgis_host {
    "~(?<h>[^:]+)" $h;
    default $host;
}
# Get 'PORT' from `$http_host`
map $http_host $port {
    "~*.*:(?<p>.*)" $p;
    default $server_port;
}
# Get 'HTTPS' status from `$https` unless 'X-Forwarded-Proto'
# is set by the reverse proxy and contains 'https' scheme
map $http_x_forwarded_proto $qgis_ssl {
    "https" "on";
    default $https;
}
# Get 'PORT' from `$port` unless 'X-Forwarded-Port'
# is set by the reverse proxy
map $http_x_forwarded_port $qgis_port {
    "" $port;
    default $http_x_forwarded_port;
}

server {
    listen              443 ssl;
    server_name         mycivitas.ca;

    ssl_certificate /etc/letsencrypt/live/mycivitas.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mycivitas.ca/privkey.pem;

    include /etc/nginx/conf.d/default.conf.http;
}

# if we try to connect from http, we redirect to https
server {
    listen 80;
    server_name mycivitas.ca;

    # Except for let's encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect to https
    location / {
        return 302 https://mycivitas.ca$request_uri; #
    }
}
